#!/bin/bash
##set -euo pipefail
set -eo pipefail

BUILD_DIR=$1
CACHE_DIR=$2
export BUILDPACK_DIR=`dirname $(readlink -f ${BASH_SOURCE%/*})`
export DEPS_DIR="$BUILD_DIR/.cloudfoundry"
mkdir -p "$DEPS_DIR/0"
mkdir -p "$BUILD_DIR/.profile.d"
echo "export DEPS_DIR=\$HOME/.cloudfoundry" > "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"
chmod 755 "$BUILD_DIR/.profile.d/0000_set-deps-dir.sh"

$BUILDPACK_DIR/bin/supply "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0
$BUILDPACK_DIR/bin/finalize "$BUILD_DIR" "$CACHE_DIR" "$DEPS_DIR" 0

# installing ffmpeg
indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
VENDOR_DIR="vendor"

echo "-----> Install ffmpeg"
DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/ffmpeg-release-64bit-static.tar.xz"

echo "DOWNLOAD_URL = " $DOWNLOAD_URL | indent

cd $BUILD_DIR
mkdir -p $VENDOR_DIR
cd $VENDOR_DIR
##curl -L $DOWNLOAD_URL | tar xz
wget --quiet $DOWNLOAD_URL
tar xf ffmpeg-release-64bit-static.tar.xz
rm ffmpeg-release-64bit-static.tar.xz

echo "exporting PATH and LIBRARY_PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/1_ffmpeg.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$HOME/vendor/$(basename $(ls -d /home/vcap/app/vendor/ffmpeg*)):$PATH"' >> $PROFILE_PATH
chmod 755 $PROFILE_PATH
##cat $PROFILE_PATH


echo "-----> Install ghostscript"
DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/ghostscript-9.23-linux-x86_64.tgz"

echo "DOWNLOAD_URL = " $DOWNLOAD_URL | indent

cd $BUILD_DIR
cd $VENDOR_DIR
wget --quiet $DOWNLOAD_URL
tar xf ghostscript-9.23-linux-x86_64.tgz
cd $(basename $(ls -d ghostscript*))
mv $(basename $(ls gs*)) gs
cd -
rm ghostscript-9.23-linux-x86_64.tgz

echo "exporting PATH and LIBRARY_PATH" | indent
PROFILE_PATH="$BUILD_DIR/.profile.d/1_ghostscript.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="$HOME/vendor/$(basename $(ls -d /home/vcap/app/vendor/ghostscript*)):$PATH"' >> $PROFILE_PATH
chmod 755 $PROFILE_PATH
##cat $PROFILE_PATH

echo "-----> Install chromedriver"

cd $BUILD_DIR
cd $VENDOR_DIR

DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/get-chromedriver-packages.sh"
wget --quiet $DOWNLOAD_URL
chmod 755 get-chromedriver-packages.sh
./get-chromedriver-packages.sh

echo "-----> Install graphicsmagick"

cd $BUILD_DIR
cd $VENDOR_DIR

DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/get-graphicsmagick-packages.sh"
wget --quiet $DOWNLOAD_URL
chmod 755 get-graphicsmagick-packages.sh
./get-graphicsmagick-packages.sh

echo "-----> Install python-software-properties"

cd $BUILD_DIR
cd $VENDOR_DIR

DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/get-python-packages.sh"
wget --quiet $DOWNLOAD_URL
chmod 755 get-python-packages.sh
./get-python-packages.sh

echo "-----> Install software-properties-common"

cd $BUILD_DIR
cd $VENDOR_DIR

DOWNLOAD_URL="https://s3.amazonaws.com/json-public-main/packages/ckm/get-software-properties-common-packages.sh"
wget --quiet $DOWNLOAD_URL
chmod 755 get-software-properties-common-packages.sh
./get-software-properties-common-packages.sh

echo "-----> extracting packages"
mkdir -p $BUILD_DIR/.apt

for DEB in $(ls -1 ./deb/*.deb); do
  echo "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

echo "-----> extracting packages"
##ln -s /usr/lib/chromium-browser/chromedriver /usr/bin/chromedriver

echo  "Writing profile script"
PROFILE_PATH="$BUILD_DIR/.profile.d/000_myapt.sh"
cat <<'EOF' >$PROFILE_PATH
echo hello
export PATH="$PATH:$HOME/.apt/usr/lib/chromium-browser:$HOME/.apt/usr/bin"
export LD_LIBRARY_PATH="$HOME/.apt/usr/lib/chromium-browser:$HOME/.apt/usr/lib/x86_64-linux-gnu:$HOME/.apt/usr/lib/i386-linux-gnu:$HOME/.apt/usr/lib:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$HOME/.apt/usr/lib/chromium-browser:$HOME/.apt/usr/lib/x86_64-linux-gnu:$HOME/.apt/usr/lib/i386-linux-gnu:$HOME/.apt/usr/lib:$LIBRARY_PATH"
export INCLUDE_PATH="$HOME/.apt/usr/include:$INCLUDE_PATH"
export CPATH="$INCLUDE_PATH"
export CPPPATH="$INCLUDE_PATH"
export PKG_CONFIG_PATH="$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF
chmod 755 $PROFILE_PATH

##export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
##export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"
##export LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LIBRARY_PATH"
##export INCLUDE_PATH="$BUILD_DIR/.apt/usr/include:$INCLUDE_PATH"
##export CPATH="$INCLUDE_PATH"
##export CPPPATH="$INCLUDE_PATH"
##export PKG_CONFIG_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

##give environment to later buildpacks
#export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)=' > "$LP_DIR/export"

echo "-----> DONE!!"
